//package com.satish.finoutservice.config;
//
//import com.zaxxer.hikari.HikariConfig;
//import com.zaxxer.hikari.HikariDataSource;
//import jakarta.persistence.EntityManagerFactory;
//import org.springframework.beans.factory.annotation.Qualifier;
//import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
//import org.springframework.boot.context.properties.ConfigurationProperties;
//import org.springframework.boot.jdbc.DataSourceBuilder;
//import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
//import org.springframework.context.ApplicationContext;
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.context.annotation.Primary;
//import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
//import org.springframework.orm.jpa.JpaTransactionManager;
//import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
//import org.springframework.transaction.PlatformTransactionManager;
//import org.springframework.transaction.annotation.EnableTransactionManagement;
//
//import javax.sql.DataSource;
//import java.util.Map;
//
///**
// * @author : Satish Yadav
// * @purpose :
// */
//@Configuration
//@EnableTransactionManagement
//@EnableJpaRepositories(
//        basePackages = "com.satish.finoutservice.repo.graph",
//        entityManagerFactoryRef = "graphEntityManagerFactory",
//        transactionManagerRef = "graphTransactionManager"
//)
//public class GraphDbConfig {
//
//    @Primary
//    @Bean("grphdbproperties")
//    @ConfigurationProperties(prefix = "spring.datasource.graphdb")
//    public DataSourceProperties mysqlDataSourceProperties() {
//        return new DataSourceProperties();
//    }
//
//    @Primary
//    @Bean("graphDataSource")
////    @ConfigurationProperties(prefix = "spring.datasource.graphdb")
//    public DataSource graphDataSource(@Qualifier("grphdbproperties") DataSourceProperties graphDbProperties) {
//        System.out.println("----creating graphDataSource----");
////        HikariConfig config = new HikariConfig();
////        config.setJdbcUrl("jdbc:mysql://localhost:3306/graphdb");
////        config.setUsername("root");
////        config.setPassword("Admin@123");
////        config.setDriverClassName("com.mysql.cj.jdbc.Driver");
////        config.setMaximumPoolSize(5);
////        config.setConnectionTimeout(30000);
////        System.out.println("config : " + config);
////        HikariDataSource hikariDataSource = new HikariDataSource(config);
////        System.out.println("build created : " + hikariDataSource.toString());
////        return hikariDataSource;
//
//        return graphDbProperties
//                .initializeDataSourceBuilder()
//                .type(HikariDataSource.class)
//                .build();
//    }
//
////    @Bean
////    public EntityManagerFactoryBuilder entityManagerFactoryBuilder(ApplicationContext applicationContext) {
////        return new EntityManagerFactoryBuilder(null, null, null);
////    }
//
//    @Bean
//    public EntityManagerFactoryBuilder entityManagerFactoryBuilder() {
//        return new EntityManagerFactoryBuilder(
//                new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter(),
//                new java.util.HashMap<>(),
//                null
//        );
//    }
//
//    @Primary
//    @Bean
//    public LocalContainerEntityManagerFactoryBean graphEntityManagerFactory(
//            @Qualifier("graphDataSource") DataSource graphDataSource, EntityManagerFactoryBuilder builder
//    ) {
//        System.out.println("Inside graphEntityManagerFactory ------------");
//        return builder
//                .dataSource(graphDataSource)
//                .packages("com.satish.finoutservice.model.entity.graph")
//                .properties(Map.of(
//                        "hibernate.hbm2ddl.auto", "update",
//                        "hibernate.dialect", "org.hibernate.dialect.MySQLDialect"
//                ))
//                .build();
//    }
//
//    @Primary
//    @Bean
//    public PlatformTransactionManager graphTransactionManager(
//            @Qualifier("graphEntityManagerFactory") EntityManagerFactory entityManagerFactory
//    ) {
//        System.out.println("---------graphTransactionManager-------");
//        return new JpaTransactionManager(entityManagerFactory);
//    }
//
//}
